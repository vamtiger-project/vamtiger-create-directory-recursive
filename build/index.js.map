{"version":3,"file":"index.js","sources":["../source/index.ts"],"sourcesContent":["import { PathLike } from 'fs';\nimport { sep, join } from 'path';\nimport createDirectory from 'vamtiger-create-directory';\n\nconst pathSeparator = new RegExp(sep, 'g');\n\nexport default function ({ path: folderPath }: IParams) {\n    const folderPaths = folderPath\n        .split(pathSeparator)\n        .map((entry, index, paths) => paths.slice(0, index + 1).join(sep))\n        .filter(currentFolderPath => currentFolderPath.trim());\n    const createFolders = folderPaths\n        .reduce((createFolder, currentPath) => createFolder.then(() => createDirectory(currentPath).catch(handleError)), Promise.resolve());\n\n    return createFolders;\n}\n\nfunction handleError(error: NodeJS.ErrnoException) {\n    const exempt = error.code === ErrorCode.EEXIST;\n\n    if (!exempt) {\n        console.error(error);\n\n        throw error;\n    }\n}\n\nexport interface IParams {\n    path: string;\n}\n\nexport enum ErrorCode {\n    EEXIST = 'EEXIST'\n}"],"names":["pathSeparator","RegExp","sep","path","folderPath","split","map","entry","index","paths","slice","join","filter","currentFolderPath","trim","reduce","createFolder","currentPath","then","createDirectory","catch","handleError","Promise","resolve","error","code","ErrorCode","EEXIST","console"],"mappings":"uPAIA,MAAMA,cAAgB,IAAIC,OAAOC,SAAK,KAEtC,gBAA2BC,KAAMC,IAQ7B,OAPoBA,EACfC,MAAML,eACNM,IAAI,CAACC,EAAOC,EAAOC,IAAUA,EAAMC,MAAM,EAAGF,EAAQ,GAAGG,KAAKT,WAC5DU,OAAOC,GAAqBA,EAAkBC,QAE9CC,OAAO,CAACC,EAAcC,IAAgBD,EAAaE,KAAK,IAAMC,gBAAgBF,GAAaG,MAAMC,cAAeC,QAAQC,WAKjI,SAASF,YAAYG,GAGjB,KAFeA,EAAMC,OAASC,kBAAUC,QAKpC,MAFAC,QAAQJ,MAAMA,GAERA,GAQFE,oBAAAA"}